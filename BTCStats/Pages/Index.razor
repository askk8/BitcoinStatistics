@page "/"
@inject HttpClient http
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.PieChart
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util
@using BTCStats.Data.Models

<table>
    <thead>
        <tr>
            <th>Price</th>
        </tr>
     </thead>
    <tbody>

    </tbody>
</table>

<ChartJsPieChart @ref="_pieChartJs" Config="@_config" Width="600" Height="300" />

@code{

    List<PriceModel> price = new List<PriceModel>();

    //API
    //https://api.coindesk.com/v1/bpi/historical/close.json?start=2013-09-01&end=2020-09-05

    private PieConfig _config;
    private ChartJsPieChart _pieChartJs;


    

    protected async override void OnInitialized()
    {
        price = await http.GetJsonAsync<List<PriceModel>>("https://api.coindesk.com/v1/bpi/historical/close.json?start=2013-09-01&end=2020-09-05");

        _config = new PieConfig
        {
            Options = new PieOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Sample chart from Blazor"
                },
                Responsive = true,
                Animation = new ArcAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        _config.Data.Labels.AddRange(new[] { "A", "B", "C", "D" });

        var pieSet = new PieDataset
        {
            BackgroundColor = new[] { ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), ColorUtil.RandomColorString() },
            BorderWidth = 0,
            HoverBackgroundColor = ColorUtil.RandomColorString(),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        pieSet.Data.AddRange(new double[] { 4, 5, 6, 7 });
        _config.Data.Datasets.Add(pieSet);
    }
}