@page "/"
@inject HttpClient client
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.PieChart
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util
@using BTCStats.Models

@using Newtonsoft.Json
@using Data
<div class="container-fluid">
    <div class="row" style="margin:25px;">
        @*@if (currentPrice != null)
        {
            <table class="table table-bordered table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>USD</th>
                        <th>BTC</th>
                        <th>ETH</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var price in currentPrice)
                    {
                        <tr class="justify-content-center">
                            <td>@price</td>
                            <td>@price</td>
                            <td>@price</td>
                        </tr>
                    }
                </tbody>
            </table>
        }*@
    </div>
    @*<div class="row" style="margin:10px;margin-bottom:50px;">
        <div class="col"><button class="btn btn-info" @onclick="GetPrice">Get Price</button></div>
    </div>*@
</div>

@code{

    public PriceHistoryModel prices { get; set;}

    public List<PriceHistoryModel> priceList { get; set; }

    protected override async Task OnInitializedAsync()
    {

        prices = new PriceHistoryModel();

        priceList = new List<PriceHistoryModel>();
        priceList = await client.GetJsonAsync<List<PriceHistoryModel>>("https://api.coingecko.com/api/v3/coins/bitcoin/history?date=16-09-2020");



    //API
    //https://api.coindesk.com/v1/bpi/historical/close.json?start=2013-09-01&end=2020-09-05

    //https://api.coingecko.com/api/v3/coins/bitcoin/history?date=16-09-2020

    //private async void GetPrice()
    //{
    //    var apiName = "https://api.coingecko.com/api/v3/coins/bitcoin/history?date=16-09-2020";
    //    var httpResponse = await client.GetAsync(apiName);

    //    if (httpResponse.IsSuccessStatusCode)
    //    {
    //        PriceHistoryModel responseData = JsonConvert.DeserializeObject<PriceHistoryModel>(await httpResponse.Content.ReadAsStringAsync());
    //        currentPrice = responseData.Market_data;
    //        StateHasChanged();
    //    }
    //}

}